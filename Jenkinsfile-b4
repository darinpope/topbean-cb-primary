pipeline {
  agent{
    kubernetes {
      label 'b4'
      yamlFile 'kubernetespod.yaml'
    }
  }
  stages {
    stage("Build Prep") {
      steps {
        container("sbt") {
          sh """
            sbt version
          """
        }
        container("jfrog") {
          sh """
            jfrog --version
          """
        }
      }
    }
    stage("B4 Build") {
      steps {
        dir("$env.WORKSPACE/MIAM-UI-Repo") {
          script {
            if (DeployableJobList.contains('QA_BTrack_MIAM_UI_Deployment_Pipeline_Job')) {   
              echo "BTrack_MIAM_UI Build Starts..."
              withCredentials([usernamePassword(credentialsId: '1b1838dc-7a4e-4b24-a095-56bbdf799cf9', passwordVariable: 'artifactorypassword', usernameVariable: 'artifactoryusername')]) {
                sh '''
                  #!/bin/sh
                  # Configuration files are moved from its environment directory to conf directory in respective ENV_BTrack_MIAM_UI_Deployment_Pipeline_Job
                  # configuration.

                  cd web

                  npm install grunt
                  npm install grunt-jsvalidate
                  grunt prod-build --force
                  cd ..

                  sbt clean docker:stage

                  cp -r $WORKSPACE/MIAM-UI-Repo/environment-configs/httpsconfig/ebextensions/nonprod  ./.ebextensions/nonprod-httpsconfig
                  cp -r $WORKSPACE/MIAM-UI-Repo/environment-configs/httpsconfig/ebextensions/production  ./.ebextensions/production-httpsconfig

                  #Include dynatrace config here if required.
                  cp -r $WORKSPACE/MIAM-UI-Repo/environment-configs/dynatrace/ebextensions/nonprod  ./.ebextensions/nonprod-dynatrace
                  cp -r $WORKSPACE/MIAM-UI-Repo/environment-configs/dynatrace/ebextensions/production  ./.ebextensions/production-dynatrace

                  cp -r .ebextensions/ target/docker/stage

                  cd target/docker/stage

                  TRACKING_TKT=$(echo $GIT_BRANCH| cut -d'-' -f 3)'-'$(echo $GIT_BRANCH| cut -d'-' -f 4)
                  zip -r btrack-miam-ui-${TRACKING_TKT} .
                  #mkdir -p $WORKSPACE/BTS/StorageBuilds
                  #mv btrack-miam-ui-${TRACKING_TKT}.zip $WORKSPACE/BTS/StorageBuilds

                  sourceFile="btrack-miam-ui-${TRACKING_TKT}.zip"

                  artifact_md5=$(md5sum "$sourceFile" | sed -e 's/'"$sourceFile"'//g')
                  artifact_sha1=$(sha1sum "$sourceFile" | sed -e 's/'"$sourceFile"'//g')

                  curl -H "X-Checksum-Sha1:${artifact_sha1}" \
                  -H "X-Checksum-MD5:${artifact_md5}" \
                  -u ${artifactoryusername}:${artifactorypassword} \
                  -X PUT "https://devops-artifactory.firstdata.com/artifactory/releases/BTS/${sourceFile}" \
                  -T $sourceFile
                '''
              }

              echo "BTrack_MIAM_UI Build and moving its Artifacts completed successfully."
            }

          }
        }
      }
    }
  }
}
